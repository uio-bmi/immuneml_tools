<tool id="iml_train_gen_model_interface" name="Train Generative Model" version="0.0.1">
    <description></description>
    <command>
        <![CDATA[
        source /storage/iml_env/bin/activate &&

      #if $iml_input
         cp -r ${iml_input.extra_files_path}/galaxy_dataset/* . &&
         (mv repertoires/* . &>/dev/null || :) &&
         rm -rf repertoires &&
      #end if

      python3 '$__tool_directory__/build_train_gen_model_yaml_wrapper.py'
      --output_path . --file_name train_generative_model.yaml
      #for $report_name in $reports
        --"$report_name" True
      #end for
      --training_percentage $training_percentage
      --export_dataset_type $export_dataset_type
      --gen_example_count $gen_example_count
      --generative_method $generative_method
      --chain_type $chain_type

      && cp ./train_generative_model.yaml ${specs} &&
      immune-ml ./train_generative_model.yaml ${html_outfile.files_path} --tool GalaxyTrainGenModel &&

      mv ${html_outfile.files_path}/index.html ${html_outfile} &&
      mv ${html_outfile.files_path}/exported_models/*.zip ${generative_model} &&
      mv ${html_outfile.files_path}/immuneML_output.zip $archive
      ]]>
    </command>

    <inputs>
        <param name="iml_input" type="data" format="immuneml_receptors.html" label="immuneML dataset for training" optional="false"
               help="This field accepts an ImmuneML dataset, as created by the Create Dataset tool."/>

        <param type="select" name="generative_method" label="What type of model would you like to train?" display="radio"
                   help="">
            <option value="PWM">PWM</option>
            <option value="SimpleLSTM">LSTM</option>
            <option value="SimpleVAE">VAE</option>
        </param>

        <param name="chain_type" type="select" label="Chain type" help="Chain type for the sequences to generate" display="radio">
            <option value="TRB">T cell beta</option>
            <option value="TRA">T cell alpha</option>
            <option value="IGH">B cell heavy</option>
            <option value="IGL">B cell light</option>
        </param>

        <param type="integer" name="gen_example_count" label="Number of examples to generate" value="100" min="1"/>

        <param name="reports" type="select" label="Data analysis reports" help="These reports will be run on the original dataset as well as the generated examples." display="checkboxes" multiple="true">
            <option value="sequence_length_report">Sequence length distribution</option>
            <option value="amino_acid_report">Amino acid frequency distribution</option>
            <option value="kl_gen_model_report">KL divergence between k-mer distributions</option>
        </param>

        <param type="integer" name="training_percentage" label="Percentage of data that is used for training" value="70" min="10" max="100" help="This part of the data is used for training the generative model. The remaining data is used for comparison with the generated data."/>

        <param type="select" name="export_dataset_type" label="How to export the data" display="radio"
               help="">
            <option value="combined_dataset">Export the combined original + generated dataset (sequence origins are labelled)</option>
            <option value="generated_dataset">Export only the generated dataset</option>
        </param>
    </inputs>

    <outputs>
        <data format="txt" name="specs" label="train_generative_model.yaml"/>
        <data format="zip" name="generative_model" label="generative_model.zip"/>
        <data format="zip" name="archive" label="Archive: generative model training"/>
        <data format="immuneml_receptors.html" name="html_outfile" label="ImmuneML dataset (from generative model)"/>
    </outputs>

    <help>
      <![CDATA[

          This Galaxy tool allows users to train a generative model for receptor sequences, which can be used
          to generate synthetic datasets.
          Optionally, it can provide some reports of the generated data or of the model used for generation.

          For full documentation, see https://docs.immuneml.uio.no/.

          **Tool output**

          This Galaxy tool will produce the following history elements:

          - ImmuneML dataset (generative model): The exported dataset from the generative model (containing either the
            generated sequences, or the combined set of input and generated sequences, depending on what setting was selected).
            This dataset can be used as an input for other tools. The dataset furthermore contains an HTML summary with
            all report results.

          - Archive: Generative model training: a .zip file containing the complete output folder as it was produced by immuneML.
            This folder contains the output of the TrainGenModel instruction, including the exported model and intermediate datasets.
            Furthermore, the folder contains the complete YAML specification file for the immuneML run, the HTML output and a log file.

          - trained_model.zip: a zip file containing the raw files for the generative model.
            This zip file can subsequently be used as an input when applying the generative model to generate more data.

          - train_generative_model.yaml: the YAML specification file that was used by immuneML to train generative models.
            This file can be downloaded and altered (for example to use advanced parameters).

        ]]>

    </help>

</tool>